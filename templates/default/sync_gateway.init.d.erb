#!/bin/sh
#
# Startup / shutdown script for the couchbase sync gateway
#
# Generated by Chef, do not edit this file directly
#

description "Sync Gateway Upstart Script"
version "0.1.0"
author "Andrew Reslan"

# Upstart env vars 
env RUNAS=<%= node['couchbase']['sync_gateway']['service'] %>
env RUNBASE=<%= node['couchbase']['sync_gateway']['paths']['root'] %>
env PIDFILE=<%= node['couchbase']['sync_gateway']['paths']['root'] %>/<%= node['couchbase']['sync_gateway']['service'] %>.pid
env GATEWAY=<%= node['couchbase']['sync_gateway']['paths']['root'] %>/bin/<%= node['couchbase']['sync_gateway']['service'] %>
env CONFIG=<%= node['couchbase']['sync_gateway']['paths']['root'] %>/etc/config.json
env LOGS=<%= node['couchbase']['sync_gateway']['paths']['logs'] %>
env NAME=<%= node['couchbase']['sync_gateway']['service'] %>

# Keep the server running on crash or machine reboot
start on runlevel [2345]
stop on shutdown
respawn

pre-start script
  mkdir -p $LOGS
  chown -R ${RUNAS}:${RUNAS} $LOGS

  mkdir -p ${RUNBASE}/data
  chown -R ${RUNAS}:${RUNAS} ${RUNBASE}/data
end script

exec start-stop-daemon --start --chuid $RUNAS --chdir $RUNBASE --make-pidfile --pidfile $PIDFILE --startas $GATEWAY -- $CONFIG >> ${LOGS}/${NAME}_access.log 2>> ${LOGS}/${NAME}_error.log















if [ "$(id -u)" != "0" ]; then
    echo "Must run as root"
    exit 1
fi

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

DAEMON_PATH=<%= node['couchbase']['sync_gateway']['paths']['root'] %>/bin/
DAEMON=<%= node['couchbase']['sync_gateway']['service'] %>
DAEMONOPTS=<%= node['couchbase']['sync_gateway']['paths']['root'] %>/etc/config.json
LOGFILE=<%= node['couchbase']['sync_gateway']['paths']['logs'] %>/<%= node['couchbase']['sync_gateway']['service'] %>.log
PIDFILE=<%= node['couchbase']['sync_gateway']['paths']['root'] %>/<%= node['couchbase']['sync_gateway']['service'] %>.pid

NAME=couchbase-sync-gateway
DESC="Couchbase sync_gateway"

case "$1" in
start)
    printf "%-50s" "Starting $NAME..."
    cd $DAEMON_PATH
    PID=`./$DAEMON $DAEMONOPTS > $LOGFILE 2>&1 & echo $!`
    #echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
;;
status)
        printf "%-50s" "Checking $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $NAME"
            PID=`cat $PIDFILE`
            cd $DAEMON_PATH
        if [ -f $PIDFILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi
;;

restart)
    $0 stop
    $0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac